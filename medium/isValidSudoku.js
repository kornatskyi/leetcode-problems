


/**
 * @param {character[][]} board
 * @return {boolean}
 */

const numbers = ['1', '2', '3', '4', '5', '6', '7', '8', '9']
var isValidSudoku = function (board) {

    //check rows
    for (let i = 0; i < board.length; i++) {
        for (let j = 0; j < board[i].length; j++) {
            if (board[i][j] === '.') {
                continue;
            }
            const x = board[i][j];
            board[i][j] = '.';
            if (board[i].includes(x)) {
                return false;
            }
            board[i][j] = x;
        }
    }
    //check columns
    for (let i = 0; i < board.length; i++) {
        const array = ['.', '.', '.', '.', '.', '.', '.', '.', '.'];
        for (let j = 0; j < board[i].length; j++) {
            if (board[j][i] === '.') {
                continue;
            }
            if (array[parseInt(board[j][i] - 1)] === board[j][i]) {
                return false;
            } else {
                array[parseInt(board[j][i] - 1)] = board[j][i];
            }
        }
    }
    //check sectors
    for (let i = 0; i < board.length; i++) {
        const array = ['.', '.', '.', '.', '.', '.', '.', '.', '.'];

        let nJ;
        let nI;

        if (i % 3 === 0) {
            nI = i

        } else {
            nI = Math.floor(i / 3) * 3

        }
        if (i % 3 === 2) {
            nJ = 6;

        } else if (i % 3 === 1) {
            nJ = 3;
        } else {
            nJ = 0;

        }

        for (let j = 0; j < board[i].length; j++) {


            console.log(nI, nJ);

            if (board[nJ][nI] === '.') {
                if (nJ % 3 === 2) {
                    nI++;
                    nJ = nJ - 3;
                }
                nJ++;
                continue;
            }

            if (array[parseInt(board[nJ][nI] - 1)] === board[nJ][nI]) {

                return false;
            } else {
                array[parseInt(board[nJ][nI] - 1)] = board[nJ][nI];
            }
            if (nJ % 3 === 2) {
                nI++;
                nJ = nJ - 3;
            }
            nJ++;

        }
        console.log("___________");
    }

    return true;
};

console.log(isValidSudoku([
    [".", ".", ".", ".", "5", ".", ".", "1", "."],
    [".", "4", ".", "3", ".", ".", ".", ".", "."],
    [".", ".", ".", ".", ".", "3", ".", ".", "1"],
    ["8", ".", ".", ".", ".", ".", ".", "2", "."],
    [".", ".", "2", ".", "7", ".", ".", ".", "."],
    [".", "1", "5", ".", ".", ".", ".", ".", "."],
    [".", ".", ".", ".", ".", "2", ".", ".", "."],
    [".", "2", ".", "9", ".", ".", ".", ".", "."],
    [".", ".", "4", ".", ".", ".", ".", ".", "."]]));


// console.log(isValidSudoku([
//     [".", ".", ".", ".", ".", ".", ".", ".", "."],
//     ["4", ".", ".", ".", ".", ".", ".", ".", "."],
//     [".", ".", ".", ".", ".", ".", "6", ".", "."],
//     [".", ".", ".", "3", "8", ".", ".", ".", "."],
//     [".", "5", ".", ".", ".", "6", ".", ".", "1"],
//     ["8", ".", ".", ".", ".", ".", ".", "6", "."],
//     [".", ".", ".", ".", ".", ".", ".", ".", "."],
//     [".", ".", "7", ".", "9", ".", ".", ".", "."],
//     [".", ".", ".", "6", ".", ".", ".", ".", "."]]));
// console.log(isValidSudoku([
//     [".", ".", ".", ".", "5", ".", ".", "1", "."],
//     [".", "4", ".", "3", ".", ".", ".", ".", "."],
//     [".", ".", ".", ".", ".", "3", ".", ".", "1"],
//     ["8", ".", ".", ".", ".", ".", ".", "2", "."],
//     [".", ".", "2", ".", "7", ".", ".", ".", "."],
//     [".", "1", "5", ".", ".", ".", ".", ".", "."],
//     [".", ".", ".", ".", ".", "2", ".", ".", "."],
//     [".", "2", ".", "9", ".", ".", ".", ".", "."],
//     [".", ".", "4", ".", ".", ".", ".", ".", "."]]));



// console.log(isValidSudoku([["5", "3", ".", ".", "7", ".", ".", ".", "."]
//     , ["6", ".", ".", "1", "9", "5", ".", ".", "."]
//     , [".", "9", "8", ".", ".", ".", ".", "6", "."]
//     , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
//     , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
//     , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
//     , [".", "6", ".", ".", ".", ".", "2", "8", "."]
//     , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
//     , [".", ".", ".", ".", "8", ".", ".", "7", "9"]]));

// console.log(isValidSudoku([
//     ["8", "3", ".", ".", "7", ".", ".", ".", "."]
//     , ["6", ".", ".", "1", "9", "5", ".", ".", "."]
//     , [".", "9", "8", ".", ".", ".", ".", "6", "."]
//     , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
//     , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
//     , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
//     , [".", "6", ".", ".", ".", ".", "2", "8", "."]
//     , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
//     , [".", ".", ".", ".", "8", ".", ".", "7", "9"]
// ]));





